import { AxiosResponse } from "axios";
import { Completion } from "openai/resources";
import { ChatCompletionCreateParamsBase } from "openai/resources/chat/completions";
import { CompletionCreateParamsBase } from "openai/resources/completions";
export declare class OpenaiService {
    private headers;
    private baseUrl;
    constructor(baseUrl: string, headers: any);
    /**
     *
     * @param body the openai completion body, more info here: https://platform.openai.com/docs/api-reference/completions/create
     * @returns the completion provided by openai api
     * @deprecated use createChatCompletion instead
     */
    createCompletion(body: CompletionCreateParamsBase): Promise<AxiosResponse<{
        data: Completion;
    }>>;
    /**
     *
     * @param body the openai chat completion body, more info here:  https://platform.openai.com/docs/api-reference/chat/create
     * @returns the chat completion provided by openai api
     */
    createChatCompletion(body: ChatCompletionCreateParamsBase): Promise<AxiosResponse<{
        data: Completion;
    }>>;
    /**
 *
 * @param body the openai chat completion body, more info here:  https://platform.openai.com/docs/api-reference/chat/create
 * @returns the chat completion provided by openai api
 */
    generateImage(body: {
        prompt: string;
        size: '256x256' | '512x512' | '1024x1024';
        fileName: string;
    }): Promise<AxiosResponse<{
        data: Completion;
    }>>;
}
